BEGIN; 

DROP TABLE IF EXISTS "film",
"serie",
"anime";
-- -----------------------------------------------------
-- Table "film"
-- -----------------------------------------------------
CREATE TABLE "film" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" text NOT NULL,
  "description" text NOT NULL,
  "author" text NOT NULL,
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" TIMESTAMPTZ
);

/*
Notes :

  - id : 
    - La clé primaire est automatiquement NOT NULL. Pas besoin de le préciser.
    - On spécifie que la colonne sera générée automatiquement par la BDD en suivant une séquence numérique prédéfinie, s'incrémentant de 1 en 1.
    - On peut définir 'BY DEFAULT' (surcharge de la valeur possible) ou 'ALWAYS' (surcharge de la valeur impossible)
    - Ici on utilise BY DEFAULT, car on définit nous même les valeurs des clés primaires (dans le fichier de seeding).
    - Mais on utilisera plus généralement ALWAYS afin de sécurisé l'incrémentation des valeurs du champ

  - created_at 
    - CURRENT_TIMESTAMP : on peut aussi utiliser now()
*/
-- -----------------------------------------------------
-- Table "serie"
-- -----------------------------------------------------
CREATE TABLE "serie" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
  "title" text NOT NULL,
  "description" text NOT NULL,
  "author" text NOT NULL,
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" TIMESTAMPTZ
);

-- -----------------------------------------------------
-- Table "anime"
-- -----------------------------------------------------
CREATE TABLE "anime" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
  "title" text NOT NULL,
  "description" text NOT NULL,
  "author" text NOT NULL,
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" TIMESTAMPTZ
);

COMMIT; -- Pour mettre fin à au bloc de transaction et l'exécuter
